name: Build and Release

on:
  push:
    branches:
      - '*'
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - uses: actions/setup-go@v5
      with:
        go-version-file: 'go.mod'
        cache: true
    
    - name: Install libsodium (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt-get update && sudo apt-get install -y libsodium-dev
    
    - name: Install libsodium (macOS)
      if: matrix.os == 'macos-latest'
      run: brew install libsodium
    
    - name: Install libsodium and set up pkg-config (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        $libsodiumVersion = "1.0.20"
        $libsodiumZip = "libsodium-${libsodiumVersion}-msvc.zip"
        $libsodiumUrl = "https://github.com/jedisct1/libsodium/releases/download/${libsodiumVersion}-RELEASE/${libsodiumZip}"
        $libsodiumDest = "C:\libsodium"
        
        Invoke-WebRequest -Uri $libsodiumUrl -OutFile $libsodiumZip
        Expand-Archive -Path $libsodiumZip -DestinationPath $libsodiumDest
        
        # Create pkg-config file
        $pkgConfig = @"
        prefix=C:/libsodium
        exec_prefix=`${prefix}
        libdir=`${exec_prefix}/x64/Release/v142/dynamic
        includedir=`${prefix}/include
        
        Name: libsodium
        Version: ${libsodiumVersion}
        Description: A modern and easy-to-use crypto library
        
        Libs: -L`${libdir} -lsodium
        Cflags: -I`${includedir}
        "@
        
        $pkgConfig | Out-File -FilePath "C:\libsodium\libsodium.pc" -Encoding utf8
        
        # Set environment variables
        echo "PKG_CONFIG_PATH=C:\libsodium" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        echo "CGO_CFLAGS=-IC:\libsodium\include" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        echo "CGO_LDFLAGS=-LC:\libsodium\x64\Release\v142\dynamic -lsodium" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        echo "C:\libsodium\x64\Release\v142\dynamic" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
    
    - name: Install pkg-config (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        choco install pkgconfiglite -y
        echo "C:\ProgramData\chocolatey\lib\pkgconfiglite\tools\pkg-config-0.28-1\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
    
    - name: Build
      run: |
        go mod tidy
        go build -v ./...
    
    - name: Test
      run: go test -v ./...

  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - uses: actions/setup-go@v5
      with:
        go-version-file: 'go.mod'
        cache: true
    - name: Install libsodium (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt-get update && sudo apt-get install -y libsodium-dev
    - name: Install libsodium (macOS)
      if: matrix.os == 'macos-latest'
      run: brew install libsodium
    - name: Install libsodium and set up pkg-config (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        $libsodiumVersion = "1.0.20"
        $libsodiumZip = "libsodium-${libsodiumVersion}-msvc.zip"
        $libsodiumUrl = "https://github.com/jedisct1/libsodium/releases/download/${libsodiumVersion}-RELEASE/${libsodiumZip}"
        $libsodiumDest = "C:\libsodium"
        
        Invoke-WebRequest -Uri $libsodiumUrl -OutFile $libsodiumZip
        Expand-Archive -Path $libsodiumZip -DestinationPath $libsodiumDest
        
        # Create pkg-config file
        $pkgConfig = @"
        prefix=C:/libsodium
        exec_prefix=`${prefix}
        libdir=`${exec_prefix}/x64/Release/v142/dynamic
        includedir=`${prefix}/include
        
        Name: libsodium
        Version: ${libsodiumVersion}
        Description: A modern and easy-to-use crypto library
        
        Libs: -L`${libdir} -lsodium
        Cflags: -I`${includedir}
        "@
        
        $pkgConfig | Out-File -FilePath "C:\libsodium\libsodium.pc" -Encoding utf8
        
        # Set environment variables
        echo "PKG_CONFIG_PATH=C:\libsodium" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        echo "CGO_CFLAGS=-IC:\libsodium\include" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        echo "CGO_LDFLAGS=-LC:\libsodium\x64\Release\v142\dynamic -lsodium" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        echo "C:\libsodium\x64\Release\v142\dynamic" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
    
    - name: Install pkg-config (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        choco install pkgconfiglite -y
        echo "C:\ProgramData\chocolatey\lib\pkgconfiglite\tools\pkg-config-0.28-1\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
    - name: Import GPG key
      uses: crazy-max/ghaction-import-gpg@v6
      id: import_gpg
      with:
        gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
        passphrase: ${{ secrets.PASSPHRASE }}
    - name: Run GoReleaser
      uses: goreleaser/goreleaser-action@v5
      with:
        args: release --clean
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}